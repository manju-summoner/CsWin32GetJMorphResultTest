// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591, CS1573, CS0465, CS0649, CS8019, CS1570, CS1584, CS1658
namespace Fixed
{
	using global::System;
	using global::System.Diagnostics;
	using global::System.Runtime.CompilerServices;
	using global::System.Runtime.InteropServices;
	using global::System.Runtime.Versioning;
	using win32 = global::Windows.Win32;

	namespace Globalization
	{
		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		internal partial struct MORRSLT
		{
			internal uint dwSize;
			internal win32.Foundation.PWSTR pwchOutput;
			internal ushort cchOutput;
			internal win32.Globalization.MORRSLT._Anonymous1_e__Union Anonymous1;
			internal win32.Globalization.MORRSLT._Anonymous2_e__Union Anonymous2;
			internal unsafe ushort* pchInputPos;
			internal unsafe ushort* pchOutputIdxWDD;
			internal win32.Globalization.MORRSLT._Anonymous3_e__Union Anonymous3;
			internal unsafe ushort* paMonoRubyPos;
			internal unsafe win32.Globalization.WDD* pWDD;
			internal int cWDD;
			internal unsafe void* pPrivate;
			internal __char_1 BLKBuff;

			[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)] // <-- add CharSet = CharSet.Unicode
			internal struct __char_1
			{
				internal char _0;

				/// <summary>Always <c>1</c>.</summary>
				internal int Length => 1;

				/// <summary>
				/// Gets a ref to an individual element of the inline array.
				/// ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
				/// </summary>
				internal ref char this[int index] => ref AsSpan()[index];

				/// <summary>
				/// Gets this inline array as a span.
				/// </summary>
				/// <remarks>
				/// ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
				/// </remarks>
				internal Span<char> AsSpan() => MemoryMarshal.CreateSpan(ref _0, 1);
			}

			[StructLayout(LayoutKind.Explicit, Pack = 1)]
			internal partial struct _Anonymous1_e__Union
			{
				[FieldOffset(0)] internal win32.Foundation.PWSTR pwchRead;
				[FieldOffset(0)] internal win32.Foundation.PWSTR pwchComp;
			}

			[StructLayout(LayoutKind.Explicit, Pack = 1)]
			internal partial struct _Anonymous2_e__Union
			{
				[FieldOffset(0)] internal ushort cchRead;
				[FieldOffset(0)] internal ushort cchComp;
			}

			[StructLayout(LayoutKind.Explicit, Pack = 1)]
			internal partial struct _Anonymous3_e__Union
			{
				[FieldOffset(0)] internal unsafe ushort* pchReadIdxWDD;
				[FieldOffset(0)] internal unsafe ushort* pchCompIdxWDD;
			}
		}
	}
}
